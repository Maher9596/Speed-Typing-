[{"C:\\Users\\Lenovo\\Desktop\\MAHER CODE\\Project\\learn react\\Typing Game\\typing\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\MAHER CODE\\Project\\learn react\\Typing Game\\typing\\src\\reportWebVitals.js":"2","C:\\Users\\Lenovo\\Desktop\\MAHER CODE\\Project\\learn react\\Typing Game\\typing\\src\\App.js":"3","C:\\Users\\Lenovo\\Desktop\\MAHER CODE\\Project\\learn react\\Typing Game\\typing\\src\\hooks\\useGame.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":675,"mtime":1609424154032,"results":"8","hashOfConfig":"6"},{"size":1493,"mtime":1609424121437,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1ys7hkf",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"C:\\Users\\Lenovo\\Desktop\\MAHER CODE\\Project\\learn react\\Typing Game\\typing\\src\\index.js",[],["20","21"],"C:\\Users\\Lenovo\\Desktop\\MAHER CODE\\Project\\learn react\\Typing Game\\typing\\src\\reportWebVitals.js",[],"C:\\Users\\Lenovo\\Desktop\\MAHER CODE\\Project\\learn react\\Typing Game\\typing\\src\\App.js",["22","23","24","25"],"C:\\Users\\Lenovo\\Desktop\\MAHER CODE\\Project\\learn react\\Typing Game\\typing\\src\\hooks\\useGame.js",["26","27","28","29"],"import {useState, useEffect, useRef} from \"react\"\r\n\r\nfunction useGame() {\r\n  const [type, setType] = useState(\"\")\r\n  const [timeRemaining, setTimeRemaining] = useState(10)\r\n  const [isStart, setIsStart] = useState(false)\r\n  const [countWords, setCountWords] = useState(0)\r\n  const textBoxRef = useRef(null)\r\n\r\n  // To capture the typing\r\n  const handleChange = (event) => {\r\n    const {value} = event.target\r\n    setType(value)\r\n  }\r\n\r\n  // To calculate number of words\r\n  const calculateWords = (type) => {\r\n    const wordsArr = type.trim().split(\" \")\r\n   return wordsArr.filter(word => word !== \"\").length\r\n  }\r\n\r\n  // To let the count begin and stop when it reaches 0 & run calculateWords when time i 0\r\n  useEffect(() => {\r\n    if (isStart && timeRemaining > 0) {\r\n      setTimeout (() => {\r\n        setTimeRemaining(time => time - 1)\r\n      }, 1000)\r\n    } else {\r\n      setIsStart(false)\r\n      setCountWords(calculateWords(type))\r\n    }\r\n  }, [timeRemaining, isStart])\r\n\r\n  // When start is clicked this function will allow us to start again without refreshing the page & Ref is used to focus on textarea when\r\n  // start is clicked without needing to click on the textarea\r\n  const startGame = () => {\r\n    setIsStart(true)\r\n       setTimeRemaining (10)\r\n        setType(\"\")\r\n        textBoxRef.current.disabled = false\r\n        textBoxRef.current.focus()\r\n  }\r\n  return {textBoxRef, type, isStart, handleChange, timeRemaining, startGame, countWords}\r\n}\r\n\r\nexport default useGame\r\n\r\n\r\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":15,"nodeType":"36","messageId":"37","endLine":1,"endColumn":23},{"ruleId":"34","severity":1,"message":"38","line":1,"column":25,"nodeType":"36","messageId":"37","endLine":1,"endColumn":34},{"ruleId":"34","severity":1,"message":"39","line":1,"column":36,"nodeType":"36","messageId":"37","endLine":1,"endColumn":42},{"ruleId":"40","severity":1,"message":"41","line":12,"column":98,"nodeType":"42","endLine":12,"endColumn":112},{"ruleId":"34","severity":1,"message":"43","line":7,"column":10,"nodeType":"36","messageId":"37","endLine":7,"endColumn":20},{"ruleId":"34","severity":1,"message":"44","line":11,"column":9,"nodeType":"36","messageId":"37","endLine":11,"endColumn":21},{"ruleId":"45","severity":1,"message":"46","line":32,"column":6,"nodeType":"47","endLine":32,"endColumn":30,"suggestions":"48"},{"ruleId":"34","severity":1,"message":"49","line":36,"column":9,"nodeType":"36","messageId":"37","endLine":36,"endColumn":18},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useRef' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'countWords' is assigned a value but never used.","'handleChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCountWords' needs the current value of 'type'.","ArrayExpression",["52"],"'startGame' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [timeRemaining, isStart, type]",{"range":"55","text":"56"},[950,974],"[timeRemaining, isStart, type]"]